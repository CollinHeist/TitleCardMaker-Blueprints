name: Parse Blueprint Submission

on:
  issue_comment:
    types: [ created ]

jobs:
  create_blueprint_from_issue:
    # Only run on Blueprint issues when I comment /create-blueprint
    if: ${{ (!github.event.issue.pull_request) && (startsWith(github.event.issue.title, '[Blueprint]')) && (contains(github.event.comment.body, '/create-blueprint')) && (github.event.comment.user.login == 'CollinHeist') && !contains(github.event.issue.labels.*.name, 'created') }}
    runs-on: ubuntu-latest

    steps:
      # Check out repository
      - name: Checkout Repository
        uses: actions/checkout@v3
        with:
          ref: refs/heads/staging
          persist-credentials: false
          fetch-depth: 0

      # Parse issue into JSON
      - name: Parse issue
        id: issue_to_json
        uses: edumserrano/github-issue-forms-parser@v1
        with:
          template-filepath: .github/ISSUE_TEMPLATE/new_blueprint.yml
          issue-form-body: '${{ github.event.issue.body }}'

      # Run script to parse issue
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests "pydantic==1.*" pytest regex

      - name: Parse Issue into Blueprint
        env:
          # GITHUB_CONTEXT: ${{ toJson(github.event.issue) }}
          ISSUE_CREATOR: '${{ github.event.issue.user.login }}'
          ISSUE_JSON: '${{ steps.issue_to_json.outputs.parsed-issue }}'
        run: |
          python ./build/parse_submission.py

      - name: Run pytest
        run: |
          pytest

      # Commit changes
      - name: Commit New Blueprint
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "TitleCardMakerBot"
          git add ./blueprints
          git diff-index --quiet HEAD || git commit -a -m "Create ${{ github.event.issue.user.login }}'s Blueprint #${{ github.event.issue.number }}"
          git pull

      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: refs/heads/staging

      # Add label that Blueprint has been built
      - name: Add Label
        if: ${{ success() }}
        uses: actions/github-script@v6
        with:
          script: |
            github.rest.issues.addLabels({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: ["created"]
            })
